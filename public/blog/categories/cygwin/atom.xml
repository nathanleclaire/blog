<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cygwin | nathan leclaire]]></title>
  <link href="http://nathanleclaire.com/blog/categories/cygwin/atom.xml" rel="self"/>
  <link href="http://nathanleclaire.com/"/>
  <updated>2014-09-29T03:20:27+00:00</updated>
  <id>http://nathanleclaire.com/</id>
  <author>
    <name><![CDATA[Nathan LeClaire]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fixing Cygwin's SSL issues with git clone / c_rehash bug]]></title>
    <link href="http://nathanleclaire.com/blog/2014/03/24/cygwin-git-clone-ssl-issue-c_rehash-openssl-not-found/"/>
    <updated>2014-03-24T19:44:00+00:00</updated>
    <id>http://nathanleclaire.com/blog/2014/03/24/cygwin-git-clone-ssl-issue-c_rehash-openssl-not-found</id>
    <content type="html"><![CDATA[<h1>Cygwin&#8217;s git clone drama</h1>

<p><img src="/images/cygwin-ssl/cygwin.png"></p>

<h2>Oh, you.</h2>

<p>When I am working on Windows for the various reasons which compel one to work on Windows I often use <a href="http://www.cygwin.com">Cygwin</a> to provide UNIX-like functionality on the command line (cmd.exe leaves a lot to be desired).  Since a vital part of my workflow on any OS is <a href="http://git-scm.com">git</a> I happily installed git using the Install.exe workflow that Cygwin provides.</p>

<p>To my surprise (and, I&#8217;m not going to deny it, slight nerd-rage) when I attempted to <code>git clone</code> a repository from Github I was greeted by an error message like this one:</p>

<pre><code>$ git clone https://github.com/foo/bar
error: SSL certificate problem, verify that the CA cert is OK. Details:
error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed
</code></pre>

<p>OK, so I have an SSL issue.  Running through the Setup.exe with Cygwin again and installing <code>ca-certificates</code> and <code>openssl</code> didn&#8217;t fix it, and eventually I came across <a href="http://stackoverflow.com/questions/3777075/ssl-certificate-rejected-trying-to-access-github-over-https-behind-firewall">this Stack Overflow post</a> which described my exact issue.</p>

<h1>On the hunt for solutions</h1>

<h2>One proposed solution</h2>

<pre><code>$ git config --global http.sslVerify false
</code></pre>

<p>SERIOUSLY!?!?</p>

<p>No way I&#8217;m going to turn off SSL just to try and workaround this issue.  I don&#8217;t like getting MITMed.</p>

<h2>A much better proposed solution</h2>

<p>Also from Stack Overflow:</p>

<pre><code>$ cd /usr/ssl/certs
$  curl http://curl.haxx.se/ca/cacert.pem | awk 'split_after==1{n++;split_after=0} /-----END CERTIFICATE-----/ {split_after=1} {print &gt; "cert" n ".pem"}'
$ c_rehash
</code></pre>

<p>OK, this is headed in the right direction, I can tell.  I had to manually create the <code>/usr/ssl/certs</code> directory (probably because I hadn&#8217;t installed OpenSSL yet when I tried this), but even after getting OpenSSL <code>c_rehash</code> was giving me an error:</p>

<pre><code>$ c_rehash
c_rehash: rehashing skipped ('openssl' program not available)
</code></pre>

<p>Pretty odd, since just typing <code>openssl</code> on the CLI clearly indicated that it was present.</p>

<h2>Debuggin&#8217; some Perl code</h2>

<p>Nothing too fruitful was turning up on Google for this (the <a href="http://koti.kapsi.fi/ptk/postfix/c_rehash.txt">original program source</a> was, though :P) so I dug into the program source (Perl) and found this bit at the top:</p>

<pre><code>my $openssl;

my $dir = "/usr/lib/ssl";

if(defined $ENV{OPENSSL}) {
    $openssl = $ENV{OPENSSL};
} else {
    $openssl = "openssl";
    $ENV{OPENSSL} = $openssl;
}

$ENV{PATH} .= ":$dir/bin";

if(! -x $openssl) {
    my $found = 0;
    foreach (split /:/, $ENV{PATH}) {
        if(-x "$_/$openssl") {
            $found = 1;
            last;
        }   
    }
    if($found == 0) {
        print STDERR "c_rehash: rehashing skipped ('openssl' program not available)\n";
        exit 0;
    }
}
</code></pre>

<p>Sprinkling some liberal debugging statements into that yielded me the information that <code>c_rehash</code> was finding the relevant directories (and consequently the <code>openssl</code> binary) but the file wasn&#8217;t showing up as executable.  Some Googling turned up stuff like <a href="http://cygwin.com/ml/cygwin/2007-05/msg00681.html">this</a>, which made me wonder&#8230;</p>

<h2>If <em>this</em> solution would work</h2>

<pre><code>$ which openssl
/cygdrive/c/Program Files (x86)/Git/bin/openssl
$ chmod +x /cygdrive/c/Program\ Files\ \(x86\)/Git/bin/openssl
</code></pre>

<p>It did!  You have to run Cygwin as administrator to have the proper permissions though to change those file permissions though.</p>

<p><code>c_rehash</code> then went through without a hitch, Which finally allowed <code>git clone</code> to work.</p>

<h1>Conclusion</h1>

<p>Whew!  That was exhausting.  Time to do some programming to unwind :)</p>

<p>Until next time, stay sassy Internet.</p>

<ul>
<li>Nathan</li>
</ul>

]]></content>
  </entry>
  
</feed>
